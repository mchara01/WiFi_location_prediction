Step 2 (Bonus) - Plotting Decision Tree
Building Clean Decision Tree...
Step 3 - Evaluation
Evaluating clean dataset...
Confusion Matrix of all folds on clean dataset:
[array([[50,  0,  0,  0],
       [ 0, 42,  1,  0],
       [ 0,  6, 63,  0],
       [ 0,  0,  0, 38]]), array([[43,  0,  0,  0],
       [ 0, 44,  0,  0],
       [ 1,  4, 51,  0],
       [ 0,  0,  0, 57]]), array([[49,  0,  0,  0],
       [ 0, 49,  3,  0],
       [ 0,  1, 42,  0],
       [ 1,  0,  1, 54]]), array([[44,  0,  0,  1],
       [ 0, 48,  1,  0],
       [ 0,  3, 48,  0],
       [ 1,  0,  0, 54]]), array([[57,  0,  0,  2],
       [ 0, 48,  2,  0],
       [ 0,  1, 43,  1],
       [ 0,  0,  0, 46]]), array([[42,  0,  0,  0],
       [ 0, 62,  3,  0],
       [ 1,  1, 45,  0],
       [ 0,  0,  1, 45]]), array([[50,  0,  0,  0],
       [ 0, 48,  1,  0],
       [ 0,  2, 46,  1],
       [ 1,  0,  0, 51]]), array([[70,  0,  0,  0],
       [ 0, 37,  3,  0],
       [ 0,  1, 39,  1],
       [ 0,  0,  0, 49]]), array([[44,  0,  1,  0],
       [ 0, 52,  2,  0],
       [ 0,  4, 47,  0],
       [ 0,  0,  0, 50]]), array([[46,  0,  1,  0],
       [ 0, 51,  3,  0],
       [ 0,  1, 47,  0],
       [ 1,  0,  0, 50]])]
Average confusion matrix: 
[[49.5  0.   0.2  0.3]
 [ 0.  48.1  1.9  0. ]
 [ 0.2  2.4 47.1  0.3]
 [ 0.4  0.   0.2 49.4]]
Accuracy on clean dataset:  0.9704999999999999
Recall on clean dataset:  (array([0.99 , 0.962, 0.942, 0.988]), 0.9705)
Precision on clean dataset:  (array([0.98802395, 0.95247525, 0.9534413 , 0.988     ]), 0.9704851237917799)
F1-Score on clean dataset:  (array([0.98901099, 0.95721393, 0.94768612, 0.988     ]), 0.9704777590148622)
Average tree depth on clean dataset:  12.2

Evaluating noisy dataset...
Confusion Matrix of all folds on noisy dataset:
[array([[41,  0,  3,  2],
       [ 1, 46,  5,  3],
       [ 2,  1, 41,  4],
       [ 3,  3,  4, 41]]), array([[36,  1,  2,  4],
       [ 0, 38,  7,  1],
       [ 4,  0, 50,  5],
       [ 2,  5,  2, 43]]), array([[43,  4,  5,  5],
       [ 3, 36,  3,  2],
       [ 4,  5, 35,  2],
       [ 8,  2,  0, 43]]), array([[33,  4,  5,  1],
       [ 3, 51,  5,  2],
       [ 3,  6, 42,  3],
       [ 3,  4,  0, 35]]), array([[34,  5,  1,  6],
       [ 3, 40,  6,  3],
       [ 0,  2, 34,  2],
       [ 5,  6,  5, 48]]), array([[30,  2,  4,  1],
       [ 6, 45,  1,  5],
       [ 1,  4, 52,  2],
       [ 4,  2,  5, 36]]), array([[49,  4,  2,  3],
       [ 4, 40,  4,  3],
       [ 2,  5, 36,  3],
       [ 2,  3,  2, 38]]), array([[45,  7,  6,  6],
       [ 3, 40,  1,  2],
       [ 3,  5, 37,  2],
       [ 3,  0,  5, 35]]), array([[38,  5,  2,  6],
       [ 4, 36,  2,  2],
       [ 5,  6, 36,  5],
       [ 6,  1,  2, 44]]), array([[36,  1,  3,  5],
       [ 2, 29,  7,  3],
       [ 4,  1, 55,  6],
       [ 3,  3,  2, 40]])]
Average confusion matrix:
[[38.5  3.3  3.3  3.9]
 [ 2.9 40.1  4.1  2.6]
 [ 2.8  3.5 41.8  3.4]
 [ 3.9  2.9  2.7 40.3]]
Accuracy on noisy dataset:  0.8035
Recall on noisy dataset:  (array([0.78571429, 0.80684105, 0.81165049, 0.80923695]), 0.8033606913050023)
Precision on noisy dataset:  (array([0.8004158 , 0.80522088, 0.80539499, 0.80278884]), 0.8034551297343849)
F1-Score on noisy dataset:  (array([0.79299691, 0.80603015, 0.80851064, 0.806     ]), 0.8033844248633223)
Average tree depth on noisy dataset:  19.1

Step 4: Pruning (and Evaluation)
Pruning clean dataset...
changed best acc to 0.9666666666666667
changed best acc to 0.9944444444444445
[[47  0  0  0]
 [ 0 55  4  0]
 [ 0  4 50  0]
 [ 0  0  0 40]]

10


changed best acc to 0.9888888888888889
changed best acc to 0.9944444444444445
[[48  0  0  0]
 [ 0 37  1  0]
 [ 2  2 57  0]
 [ 2  0  0 51]]

9


changed best acc to 0.9777777777777777
changed best acc to 0.9833333333333333
changed best acc to 0.9944444444444445
[[49  0  0  0]
 [ 0 42  7  0]
 [ 0  0 48  1]
 [ 0  0  0 53]]

4


changed best acc to 0.9833333333333333
changed best acc to 0.9944444444444445
[[57  0  0  0]
 [ 0 45  1  0]
 [ 0  3 48  0]
 [ 1  0  0 45]]

9


changed best acc to 0.9555555555555556
changed best acc to 0.9777777777777777
changed best acc to 0.9888888888888889
changed best acc to 0.9944444444444445
[[48  0  0  0]
 [ 0 44  1  0]
 [ 0  2 54  1]
 [ 0  0  1 49]]

6


changed best acc to 0.9944444444444445
changed best acc to 1.0
[[49  0  0  1]
 [ 0 53  1  0]
 [ 0  3 47  0]
 [ 0  0  1 45]]

8


changed best acc to 0.9777777777777777
changed best acc to 0.9833333333333333
changed best acc to 1.0
[[52  0  1  0]
 [ 0 48  6  0]
 [ 0  1 47  0]
 [ 0  0  0 45]]

12


changed best acc to 0.9833333333333333
changed best acc to 0.9888888888888889
changed best acc to 1.0
[[45  0  0  0]
 [ 0 56  2  0]
 [ 2  2 41  0]
 [ 1  0  1 50]]

3


changed best acc to 0.9611111111111111
changed best acc to 0.9777777777777777
changed best acc to 0.9944444444444445
[[48  0  0  0]
 [ 0 50  1  0]
 [ 0  1 47  0]
 [ 1  0  0 52]]

9


changed best acc to 0.9833333333333333
changed best acc to 0.9888888888888889
[[55  0  0  0]
 [ 0 45  1  0]
 [ 1  3 32  1]
 [ 0  0  0 62]]

3


[0.96, 0.965, 0.96, 0.975, 0.975, 0.97, 0.96, 0.96, 0.985, 0.97]
Confusion Matrix of all folds
[array([[47,  0,  0,  0],
       [ 0, 55,  4,  0],
       [ 0,  4, 50,  0],
       [ 0,  0,  0, 40]]), array([[48,  0,  0,  0],
       [ 0, 37,  1,  0],
       [ 2,  2, 57,  0],
       [ 2,  0,  0, 51]]), array([[49,  0,  0,  0],
       [ 0, 42,  7,  0],
       [ 0,  0, 48,  1],
       [ 0,  0,  0, 53]]), array([[57,  0,  0,  0],
       [ 0, 45,  1,  0],
       [ 0,  3, 48,  0],
       [ 1,  0,  0, 45]]), array([[48,  0,  0,  0],
       [ 0, 44,  1,  0],
       [ 0,  2, 54,  1],
       [ 0,  0,  1, 49]]), array([[49,  0,  0,  1],
       [ 0, 53,  1,  0],
       [ 0,  3, 47,  0],
       [ 0,  0,  1, 45]]), array([[52,  0,  1,  0],
       [ 0, 48,  6,  0],
       [ 0,  1, 47,  0],
       [ 0,  0,  0, 45]]), array([[45,  0,  0,  0],
       [ 0, 56,  2,  0],
       [ 2,  2, 41,  0],
       [ 1,  0,  1, 50]]), array([[48,  0,  0,  0],
       [ 0, 50,  1,  0],
       [ 0,  1, 47,  0],
       [ 1,  0,  0, 52]]), array([[55,  0,  0,  0],
       [ 0, 45,  1,  0],
       [ 1,  3, 32,  1],
       [ 0,  0,  0, 62]])]
Average confusion matrix
[[49.8  0.   0.1  0.1]
 [ 0.  47.5  2.5  0. ]
 [ 0.5  2.1 47.1  0.3]
 [ 0.5  0.   0.3 49.2]]
Accuracy on clean dataset: 0.9680000000000001
Recall on clean dataset: (array([0.996, 0.95 , 0.942, 0.984]), 0.968)
Precision on clean dataset: (array([0.98031496, 0.95766129, 0.942     , 0.99193548]), 0.9679779337058674)
F1-Score on clean dataset: (array([0.98809524, 0.95381526, 0.942     , 0.98795181]), 0.9679655765920826)
Average tree depth on clean dataset: 7.3

Pruning noisy dataset...
changed best acc to 0.9055555555555556
changed best acc to 0.9333333333333333
[[39  1  3  2]
 [ 2 47  5  0]
 [ 2  0 43  2]
 [ 1  1  1 51]]

13


changed best acc to 0.9055555555555556
changed best acc to 0.9111111111111111
[[47  0  2  2]
 [ 2 48  3  1]
 [ 2  3 42  1]
 [ 3  1  1 42]]

13


changed best acc to 0.9222222222222223
changed best acc to 0.9277777777777778
[[50  0  1  4]
 [ 1 46  5  1]
 [ 4  3 31  2]
 [ 0  4  4 44]]

10


changed best acc to 0.8555555555555555
changed best acc to 0.8833333333333333
changed best acc to 0.8944444444444445
changed best acc to 0.9111111111111111
[[44  1  2  2]
 [ 4 37  0  0]
 [ 1  3 52  1]
 [ 2  0  2 49]]

13


changed best acc to 0.9111111111111111
changed best acc to 0.9333333333333333
[[47  0  0  2]
 [ 2 38  1  1]
 [ 1  0 53  4]
 [ 5  3  2 41]]

15


changed best acc to 0.8666666666666667
changed best acc to 0.9
changed best acc to 0.9333333333333333
changed best acc to 0.9444444444444444
[[36  0  3  5]
 [ 2 40  3  3]
 [ 4  4 49  4]
 [ 2  1  1 43]]

14


changed best acc to 0.9277777777777778
[[46  3  1  0]
 [ 0 44  1  2]
 [ 4  6 44  1]
 [ 4  1  1 42]]

17


changed best acc to 0.8611111111111112
changed best acc to 0.8888888888888888
changed best acc to 0.9
changed best acc to 0.9111111111111111
[[49  2  1  3]
 [ 1 40  4  0]
 [ 1  6 41  0]
 [ 2  1  2 47]]

12


changed best acc to 0.9222222222222223
changed best acc to 0.9444444444444444
[[44  2  1  2]
 [ 1 50  3  3]
 [ 2  4 41  1]
 [ 2  1  1 42]]

15


changed best acc to 0.8055555555555556
changed best acc to 0.9111111111111111
changed best acc to 0.9166666666666666
changed best acc to 0.9611111111111111
[[39  3  0  1]
 [ 3 50  2  1]
 [ 0  3 47  3]
 [ 1  2  2 43]]

11


[0.9, 0.895, 0.855, 0.91, 0.895, 0.84, 0.88, 0.885, 0.885, 0.895]
Confusion Matrix of all folds
[array([[39,  1,  3,  2],
       [ 2, 47,  5,  0],
       [ 2,  0, 43,  2],
       [ 1,  1,  1, 51]]), array([[47,  0,  2,  2],
       [ 2, 48,  3,  1],
       [ 2,  3, 42,  1],
       [ 3,  1,  1, 42]]), array([[50,  0,  1,  4],
       [ 1, 46,  5,  1],
       [ 4,  3, 31,  2],
       [ 0,  4,  4, 44]]), array([[44,  1,  2,  2],
       [ 4, 37,  0,  0],
       [ 1,  3, 52,  1],
       [ 2,  0,  2, 49]]), array([[47,  0,  0,  2],
       [ 2, 38,  1,  1],
       [ 1,  0, 53,  4],
       [ 5,  3,  2, 41]]), array([[36,  0,  3,  5],
       [ 2, 40,  3,  3],
       [ 4,  4, 49,  4],
       [ 2,  1,  1, 43]]), array([[46,  3,  1,  0],
       [ 0, 44,  1,  2],
       [ 4,  6, 44,  1],
       [ 4,  1,  1, 42]]), array([[49,  2,  1,  3],
       [ 1, 40,  4,  0],
       [ 1,  6, 41,  0],
       [ 2,  1,  2, 47]]), array([[44,  2,  1,  2],
       [ 1, 50,  3,  3],
       [ 2,  4, 41,  1],
       [ 2,  1,  1, 42]]), array([[39,  3,  0,  1],
       [ 3, 50,  2,  1],
       [ 0,  3, 47,  3],
       [ 1,  2,  2, 43]])]
Average confusion matrix
[[44.1  1.2  1.4  2.3]
 [ 1.8 44.   2.7  1.2]
 [ 2.1  3.2 44.3  1.9]
 [ 2.2  1.5  1.7 44.4]]
Accuracy on noisy dataset: 0.8839999999999999
Recall on noisy dataset: (array([0.9       , 0.88531187, 0.86019417, 0.89156627]), 0.8842680777612216)
Precision on noisy dataset: (array([0.87848606, 0.88176353, 0.88423154, 0.89156627]), 0.8840118462043473)
F1-Score on noisy dataset: (array([0.8891129 , 0.88353414, 0.87204724, 0.89156627]), 0.88406513723168)
Average tree depth on noisy dataset: 13.3
